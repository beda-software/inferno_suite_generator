require 'inferno_suite_generator/test_modules/search_test'
require 'inferno_suite_generator/core/group_metadata'
require 'inferno_suite_generator/utils/helpers'

module <%= suite_module_name %>
  module <%= module_name %>
    class <%= class_name %> < Inferno::Test
      include InfernoSuiteGenerator::SearchTest

      title '(<%= conformance_expectation %>) Server returns valid results for <%= resource_type %> search by <%= search_param_name_string %>'
      description %(
<%= description %>
      )

      id :<%= test_id %><% if optional? %>
      optional
  <% end %><% if needs_patient_id? %>
      input :patient_ids,
        title: 'Patient IDs',
        description: 'Comma separated list of patient IDs that in sum contain all MUST SUPPORT elements',
        default: '<%= Helpers.default_patient_ids_string %>'
  <% end %>
      def self.properties
        @properties ||= InfernoSuiteGenerator::SearchTestProperties.new(
  <%= search_test_properties_string %>
        )
      end

      def self.metadata
        @metadata ||= InfernoSuiteGenerator::Generator::GroupMetadata.new(YAML.load_file(File.join(__dir__, 'metadata.yml'), aliases: true))
      end

      def scratch_resources
        scratch[:<%= profile_identifier %>_resources] ||= {}
      end

      run do
        <%= search_method %>
      end
    end
  end
end
